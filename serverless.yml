service: graphapi

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  timeout: 10
  region: eu-west-2

functions:
  graphapi:
    handler: src/handler.graphapi
    events:
      - http:
          path: /
          method: post
          cors:
            origins:
              - https://beta.upframe.io
              - https://upframe.io
            allowCredentials: true
      - http:
          path: /
          method: get
          cors:
            origins:
              - https://beta.upframe.io
              - https://upframe.io
            allowCredentials: true

    environment:
      stage: ${self:provider.stage}
      PUBLIC_KEY: ${ssm:/API/PublicKey}
      PRIVATE_KEY: ${ssm:/API/PrivateKey~true}
      APOLLO_KEY: ${ssm:/API/ApolloKey~true}
      MAILGUN_KEY: ${ssm:/API/MailgunKey~true}
      OAUTH_CLIENT_ID: ${ssm:/API/OAuth/ClientId}
      OAUTH_CLIENT_SECRET: ${ssm:/API/OAuth/ClientSecret~true}
      CALENDAR_ID: ${ssm:/API/CalendarId}
      CALENDAR_REFRESH_TOKEN: ${ssm:/API/CalendarRefreshToken~true}
      AWS_KEY_ID: ${ssm:/API/AwsKeyId}
      AWS_KEY_SECRET: ${ssm:/API/AwsKeySecret~true}
      BUCKET_NAME: ${ssm:/API/PhotoBucket}

      PROD_DB_HOST: ${ssm:/DB/Prod/Host}
      PROD_DB_PORT: ${ssm:/DB/Prod/Port}
      PROD_DB_NAME: ${ssm:/DB/Prod/Name}
      PROD_DB_USER: ${ssm:/DB/Prod/User}
      PROD_DB_PASS: ${ssm:/DB/Prod/Password~true}

      DEV_DB_HOST: ${ssm:/DB/Dev/Host}
      DEV_DB_PORT: ${ssm:/DB/Dev/Port}
      DEV_DB_NAME: ${ssm:/DB/Dev/Name}
      DEV_DB_USER: ${ssm:/DB/Dev/User}
      DEV_DB_PASS: ${ssm:/DB/Dev/Password~true}

      GCAL_REDIRECT_DEV: ${ssm:/API/Dev/GCalRedirect}
      GCAL_REDIRECT_PROD: ${ssm:/API/Prod/GCalRedirect}
      DEV_PASSWORD: ${ssm:/API/DevPassword~true}

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  serverless-offline:
    port: 5000
  webpack:
    includeModules: true
