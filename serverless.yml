service: graphapi

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  timeout: 20
  region: eu-west-2
  vpc:
    securityGroupIds:
      - ${env:SECURITY_GROUP}
    subnetIds:
      - ${env:SUBNET}
  tracing:
    lambda: true
    apiGateway: true

functions:
  graphapi:
    handler: src/handler.graphapi
    provisionedConcurrency: 1
    events:
      - http:
          path: /
          method: post
          cors:
            origins:
              - https://beta.upframe.io
              - https://upframe.io
            allowCredentials: true
      - http:
          path: /
          method: get
          cors:
            origins:
              - https://beta.upframe.io
              - https://upframe.io
            allowCredentials: true
    layers:
      - arn:aws:lambda:eu-west-2:464622532012:layer:Datadog-Node12-x:22

    environment:
      stage: ${self:provider.stage}
      PUBLIC_KEY: ${ssm:/API/PublicKey}
      PRIVATE_KEY: ${ssm:/API/PrivateKey~true}
      APOLLO_KEY: ${ssm:/API/ApolloKey~true}
      MAILGUN_KEY: ${ssm:/API/MailgunKey~true}
      OAUTH_CLIENT_ID: ${ssm:/API/OAuth/ClientId}
      OAUTH_CLIENT_SECRET: ${ssm:/API/OAuth/ClientSecret~true}
      CALENDAR_ID: ${ssm:/API/CalendarId}
      CALENDAR_REFRESH_TOKEN: ${ssm:/API/CalendarRefreshToken~true}
      AWS_KEY_ID: ${ssm:/API/AwsKeyId}
      AWS_KEY_SECRET: ${ssm:/API/AwsKeySecret~true}
      BUCKET_NAME: ${ssm:/API/PhotoBucket}
      DEV_PASSWORD: ${ssm:/API/DevPassword~true}
      DB_HOST: ${ssm:/DB/Host}
      DB_PORT: ${ssm:/DB/Port}
      DB_NAME: ${ssm:/DB/Name}
      DB_USER: ${ssm:/API/DB/User}
      DB_PASSWORD: ${ssm:/API/DB/Password~true}
      DD_API_KEY: ${ssm:/API/Datadog/ApiKey}
      DD_LOG_LEVEL: debug
      DD_FLUSH_TO_LOG: true
      DD_ENHANCED_METRICS: true
      DD_LOGS_INJECTION: true

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  serverless-offline:
    port: 5000
  webpack:
    includeModules:
      forceExclude:
        - datadog-lambda-js
        - dd-trace
