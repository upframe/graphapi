input LoginInput {
  email: String!
  password: String!
}

input createAccountInput {
  name: String!
  email: String!
  password: String!
}

input ProfileInput {
  name: String
  handle: String
  location: String
  title: String
  company: String
  website: String
  biography: String
  social: [SocialInput]
  tags: [String!]
}

input SocialInput {
  platform: Int
  handle: String
}

input NotificationSettingsInput {
  receiveEmails: Boolean
  slotReminder: EmailInterval
}

input SlotInput {
  start: String!
  end: String
}

input SlotUpdateInput {
  deleted: [ID!]
  added: [SlotInput!]
}

input MsgExtInput {
  to: ID!
  name: String!
  email: String!
  message: String!
}

input RequestSlotInput {
  slotId: ID!
  name: String!
  email: String!
  message: String!
}

type Mutation {
  signIn(input: LoginInput!): Person
  signOut: Int
  createAccount(input: createAccountInput!): Person
  updateProfile(input: ProfileInput!): Mentor
  requestEmailChange: Int
  requestPasswordChange: Int
  deleteAccount(password: String!): Int
  setProfileVisibility(visibility: Visibility!): Mentor
  updateNotificationPreferences(input: NotificationSettingsInput!): Mentor
  updateSlots(slots: SlotUpdateInput!): Mentor
  messageExt(input: MsgExtInput!): Int
  requestSlot(input: RequestSlotInput!): Int
  acceptMeetup(meetupId: ID!): Meetup
  cancelMeetup(meetupId: ID!): Int
  connectCalendar(code: ID!): Mentor
  disconnectCalendar: Mentor
}
